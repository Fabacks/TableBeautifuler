{"version":3,"sources":["TableBeautifuller.js"],"names":["TableBeautifuller","constructor","tableId","options","this","table","document","querySelector","displayBloc","info","ordering","paging","searching","columnSearch","orderString","order","getAttribute","initialOrder","JSON","parse","Array","isArray","pageLength","parseInt","currentPage","selectItemPage","includes","push","sort","a","b","debounce_delai","debounceDelai","createWrappers","addSearchInput","addSortingArrows","applyInitialOrder","addSearchColumn","addInfoControls","addPaginationControls","paginate","classList","add","paginationWrapperTopContainer","createElement","parentNode","insertBefore","paginationWrapperDownContainer","appendChild","debounce","func","delay","debounceTimer","context","args","arguments","clearTimeout","setTimeout","apply","searchInput","setAttribute","className","addEventListener","searchTable","value","searchRow","querySelectorAll","forEach","header","cell","input","type","e","cellIndex","target","select","uniqueValues","getUniqueValuesForColumn","innerHTML","val","option","textContent","colIndex","values","row","cells","trim","idx","dataset","arrow","boundHandler","headerClickHandler","bind","_sortingHandler","sortDirection","sortTable","updateArrows","currentHeader","detectColumnType","rows","i","length","content","hasAttribute","isNaN","direction","from","A","B","localeCompare","append","orderCriteria","toLowerCase","query","matched","style","display","rowText","getElementsByTagName","map","join","indexOf","totalRows","filter","totalPages","Math","ceil","startIdx","endIdx","endDisplay","infoLabel","prevButton","disabled","nextButton","startPage","max","endPage","min","btn","pageNumber","toggle","paginationWrapperTop","paginationInfoTop","paginationSelect","num","selected","paginationInfoTopAfter","paginationButtonsContainer","pageButton","destroy","remove","removeEventListener"],"mappings":"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","file":"TableBeautifuller.min.js","sourcesContent":["class TableBeautifuller {\r\n    constructor(tableId, options = {}) {\r\n        this.table = document.querySelector(tableId);\r\n\r\n        // Display\r\n        this.displayBloc = {};\r\n        this.displayBloc.info = options.info ?? true;\r\n        this.displayBloc.ordering = options.ordering ?? true;\r\n        this.displayBloc.paging = options.paging ?? true;\r\n        this.displayBloc.searching = options.searching ?? true;\r\n        this.displayBloc.columnSearch = options.columnSearch ?? true;\r\n\r\n        // Initialisation du trie par défaut\r\n        let orderString = options.order || this.table.getAttribute(\"data-order\");\r\n        if (typeof orderString === \"string\") {\r\n            this.initialOrder = JSON.parse(orderString);\r\n        } else if (Array.isArray(orderString)) {\r\n            this.initialOrder = orderString;\r\n        } else {\r\n            this.initialOrder = [];\r\n        }\r\n\r\n        // Initialisation des valeurs pour la pagination (nombre item par page)\r\n        this.pageLength = options.pageLength || parseInt(this.table.getAttribute(\"data-page-length\")) || 10;\r\n        this.currentPage = 1;\r\n\r\n        // Initialisation du nombre d'item par page dans le selector\r\n        this.selectItemPage = options.selectItemPage || [10, 20, 30];\r\n        if (!this.selectItemPage.includes(this.pageLength)) {\r\n            this.selectItemPage.push(this.pageLength);\r\n            this.selectItemPage.sort((a, b) => a - b);\r\n        }\r\n\r\n        // Initialisation du debounce\r\n        this.debounce_delai = options.debounceDelai || 300;\r\n\r\n        this.createWrappers();\r\n\r\n        if (this.displayBloc.searching ) {\r\n            this.addSearchInput();\r\n        }\r\n\r\n        if (this.displayBloc.ordering) {\r\n            this.addSortingArrows();\r\n            this.applyInitialOrder();\r\n        }\r\n\r\n        if (this.displayBloc.columnSearch) {\r\n            this.addSearchColumn();\r\n        }\r\n\r\n        if (this.displayBloc.info) {\r\n            this.addInfoControls();\r\n        }\r\n\r\n        if (this.displayBloc.paging) {\r\n            this.addPaginationControls();\r\n            this.paginate();\r\n        }\r\n\r\n    }\r\n\r\n    createWrappers() {\r\n        // Ajout de la classe \"tableBeautifuller\" à la table\r\n        this.table.classList.add('tableBeautifuller');\r\n\r\n        // Création du wrapper \"pagination-wrapper-top-container\" au dessus du tableau\r\n        this.paginationWrapperTopContainer = document.createElement('div');\r\n        this.paginationWrapperTopContainer.classList.add('tableBeautifuller', 'pagination-wrapper-top-container');\r\n        this.table.parentNode.insertBefore(this.paginationWrapperTopContainer, this.table);\r\n\r\n        // Création du wrapper \"pagination-down-container\" en dessous du tableau\r\n        this.paginationWrapperDownContainer = document.createElement('div');\r\n        this.paginationWrapperDownContainer.classList.add('tableBeautifuller', 'pagination-down-container');\r\n        this.table.parentNode.appendChild(this.paginationWrapperDownContainer);\r\n    }\r\n\r\n    debounce(func, delay) {\r\n        let debounceTimer;\r\n        return function() {\r\n            const context = this;\r\n            const args = arguments;\r\n            clearTimeout(debounceTimer);\r\n            debounceTimer = setTimeout(() => func.apply(context, args), delay);\r\n        };\r\n    }\r\n\r\n    addSearchInput() {\r\n        this.searchInput = document.createElement(\"input\");\r\n        this.searchInput.setAttribute(\"type\", \"text\");\r\n        this.searchInput.setAttribute(\"placeholder\", \"Recherche...\");\r\n        this.searchInput.className = \"search-input\";\r\n        this.paginationWrapperTopContainer.appendChild(this.searchInput);\r\n\r\n        this.searchInput.addEventListener(\"keyup\", this.debounce(() => {\r\n            this.searchTable(null, this.searchInput.value);\r\n        }, this.debounce_delai));\r\n    }\r\n\r\n    addSearchColumn() {\r\n        let searchRow = document.createElement('tr');\r\n        searchRow.classList.add(\"thead-search\");\r\n\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            let cell = document.createElement('th');\r\n            let searchType = header.getAttribute('data-search') ?? '';\r\n\r\n            switch (searchType) {\r\n                case \"input\":\r\n                    let input = document.createElement('input');\r\n                    input.type = \"text\";\r\n                    input.addEventListener('input', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai));\r\n                    cell.appendChild(input);\r\n                break;\r\n                case \"combobox\":\r\n                    let select = document.createElement('select');\r\n                    let uniqueValues = this.getUniqueValuesForColumn(header.cellIndex);\r\n                    select.innerHTML = `<option value=\"\">Tout</option>`;\r\n                    uniqueValues.forEach(val => {\r\n                        let option = document.createElement('option');\r\n                        option.value = val;\r\n                        option.textContent = val;\r\n                        select.appendChild(option);\r\n                    });\r\n\r\n                    select.addEventListener('change', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai));\r\n                    cell.appendChild(select);\r\n                break;\r\n                default:\r\n                    return;\r\n            }\r\n\r\n            searchRow.appendChild(cell);\r\n        });\r\n\r\n        this.table.querySelector('thead').appendChild(searchRow);\r\n    }\r\n\r\n    getUniqueValuesForColumn(colIndex) {\r\n        let values = [];\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        rows.forEach(row => {\r\n            let value = row.cells[colIndex].textContent.trim();\r\n            if (!values.includes(value)) {\r\n                values.push(value);\r\n            }\r\n        });\r\n        return values;\r\n    }\r\n\r\n    addSortingArrows() {\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach((header, idx) => {\r\n            header.dataset.sort = 'none';\r\n\r\n            let arrow = document.createElement('span');\r\n            arrow.classList.add('sort-arrow');\r\n            header.appendChild(arrow);\r\n\r\n            let boundHandler = this.headerClickHandler.bind(this, header, idx);\r\n            header._sortingHandler = boundHandler;\r\n\r\n            header.addEventListener(\"click\", boundHandler);\r\n        });\r\n    }\r\n\r\n    headerClickHandler(header, idx) {\r\n        let sortDirection = header.dataset.sort === 'asc' ? 'desc' : 'asc';\r\n        this.sortTable(idx, sortDirection);\r\n        header.dataset.sort = sortDirection;\r\n        this.updateArrows(header);\r\n    }\r\n\r\n    updateArrows(currentHeader) {\r\n        // Reset all arrows\r\n        this.table.querySelectorAll(\".sort-arrow\").forEach(arrow => {\r\n            arrow.textContent = '';\r\n        });\r\n\r\n        let arrowSpan = currentHeader.querySelector('.sort-arrow');\r\n        arrowSpan.textContent = currentHeader.dataset.sort === 'asc' ? '▲' : '▼';\r\n    }\r\n\r\n    detectColumnType(colIndex) {\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (rows[i].cells[colIndex]) {\r\n                let content = rows[i].cells[colIndex].hasAttribute('data-order') ? rows[i].cells[colIndex].getAttribute('data-order') : rows[i].cells[colIndex].textContent.trim();\r\n                if (!isNaN(content)) {\r\n                    return 'number';\r\n                }\r\n            }\r\n        }\r\n        return 'string';\r\n    }\r\n\r\n    sortTable(colIndex, direction) {\r\n        let type = this.detectColumnType(colIndex);\r\n        let rows = Array.from(this.table.querySelector(\"tbody\").querySelectorAll(\"tr\"));\r\n        rows.sort((a, b) => {\r\n            let A = a.cells[colIndex].hasAttribute('data-order') ? a.cells[colIndex].getAttribute('data-order') : a.cells[colIndex].textContent.trim();\r\n            let B = b.cells[colIndex].hasAttribute('data-order') ? b.cells[colIndex].getAttribute('data-order') : b.cells[colIndex].textContent.trim();\r\n\r\n            if (type === 'number') {\r\n                return direction === 'asc' ? A - B : B - A;\r\n            } else {\r\n                return direction === 'asc' ? A.localeCompare(B) : B.localeCompare(A);\r\n            }\r\n        });\r\n\r\n        this.table.querySelector(\"tbody\").append(...rows);\r\n    }\r\n\r\n    applyInitialOrder() {\r\n        this.initialOrder.forEach(orderCriteria => {\r\n            let [colIndex, direction] = orderCriteria;\r\n            this.sortTable(colIndex, direction.toLowerCase());\r\n\r\n            let header = this.table.querySelector(`th:nth-child(${colIndex + 1})`);\r\n            header.dataset.sort = direction.toLowerCase();\r\n            this.updateArrows(header);\r\n        });\r\n    }\r\n\r\n    searchTable(colIndex, query) {\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n\r\n        // Reset de la recherche\r\n        rows.forEach(row => {\r\n            row.dataset.matched = \"true\";\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        // Recherche \r\n        rows.forEach(row => {\r\n            let rowText = \"\"\r\n            if( colIndex != null ) {\r\n                let cell = row.cells[colIndex];\r\n                rowText = cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent;\r\n            } else  {\r\n                let cells = Array.from(row.getElementsByTagName(\"td\"));\r\n                rowText = cells.map(cell => {\r\n                    return cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent;\r\n                }).join(' ');\r\n            }\r\n\r\n            rowText = rowText.trim().toLowerCase();\r\n            if (rowText.indexOf(query.toLowerCase()) !== -1) {\r\n                row.style.display = \"\";\r\n                row.dataset.matched = \"true\";\r\n            } else {\r\n                row.style.display = \"none\";\r\n                row.dataset.matched = \"false\";\r\n            }\r\n        });\r\n\r\n        // Remise à zéro de la pagination et repagination avec les résultats filtrés\r\n        this.currentPage = 1;\r\n        this.paginate();\r\n    }\r\n\r\n    paginate() {\r\n        let totalRows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\").length;\r\n        let totalPages = Math.ceil(totalRows / this.pageLength);\r\n        let startIdx = (this.currentPage - 1) * this.pageLength;\r\n        let endIdx = startIdx + this.pageLength;\r\n\r\n        if( this.displayBloc.info) {\r\n            let endDisplay = endIdx > totalRows ? totalRows : endIdx;\r\n            this.infoLabel.textContent = `Affichage de l'élément ${startIdx + 1} à ${endDisplay} sur ${totalRows} éléments`;\r\n        }\r\n\r\n        // Control display of previous & next buttons\r\n        this.prevButton.disabled = this.currentPage <= 1;\r\n        this.nextButton.disabled = this.currentPage >= totalPages\r\n\r\n        let rows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\");\r\n        rows.forEach((row, idx) => {\r\n            row.style.display = idx < startIdx || idx >= endIdx ? \"none\" : \"\";\r\n        });\r\n\r\n        let startPage = Math.max(1, this.currentPage - 2);\r\n        let endPage = Math.min(totalPages, this.currentPage + 2);\r\n\r\n        let pageButtons = this.paginationWrapperDownContainer.querySelectorAll('.page-btn');\r\n        pageButtons.forEach((btn, idx) => {\r\n            let pageNumber = startPage + idx;\r\n            btn.textContent = pageNumber;\r\n            btn.style.display = pageNumber <= endPage ? '' : 'none';\r\n            btn.classList.toggle('active', pageNumber === this.currentPage);\r\n        });\r\n    }\r\n\r\n    addInfoControls() {\r\n        this.infoLabel = document.createElement('span');\r\n        this.infoLabel.className = 'pagination-info';\r\n        this.paginationWrapperDownContainer.appendChild(this.infoLabel);\r\n    }\r\n\r\n    addPaginationControls() {\r\n        // Items per page select\r\n        this.paginationWrapperTop = document.createElement('div');\r\n        this.paginationWrapperTop.className = 'pagination-wrapper-top';\r\n\r\n        this.paginationInfoTop = document.createElement(\"span\");\r\n        this.paginationInfoTop.textContent = \"Afficher\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTop);\r\n\r\n        this.paginationSelect = document.createElement(\"select\");\r\n        this.selectItemPage.forEach(num => {\r\n            let option = document.createElement(\"option\");\r\n            option.value = num;\r\n            option.textContent = num;\r\n            option.selected = num === this.pageLength ? true : false;\r\n            this.paginationSelect.appendChild(option);\r\n        });\r\n        this.paginationSelect.value = this.pageLength;\r\n        this.paginationWrapperTop.appendChild(this.paginationSelect);\r\n\r\n        this.paginationInfoTopAfter = document.createElement(\"span\");\r\n        this.paginationInfoTopAfter.textContent = \"éléments\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTopAfter);\r\n\r\n        this.paginationWrapperTopContainer.appendChild(this.paginationWrapperTop);\r\n\r\n        // Create du wrapper \"pagination-buttons-container\" for boutton\r\n        this.paginationButtonsContainer = document.createElement('div');\r\n        this.paginationButtonsContainer.className = 'pagination-buttons-container';\r\n\r\n        this.prevButton = document.createElement('button');\r\n        this.prevButton.textContent = 'Précédent';\r\n        this.paginationButtonsContainer.appendChild(this.prevButton);\r\n\r\n        for (let i = 1; i <= 5; i++) {\r\n            let pageButton = document.createElement('button');\r\n            pageButton.textContent = i;\r\n            pageButton.className = 'page-btn';\r\n            pageButton.addEventListener('click', () => {\r\n                this.currentPage = parseInt(pageButton.textContent);\r\n                this.paginate();\r\n            });\r\n            this.paginationButtonsContainer.appendChild(pageButton);\r\n        }\r\n\r\n        this.nextButton = document.createElement('button');\r\n        this.nextButton.textContent = 'Suivant';\r\n        this.paginationButtonsContainer.appendChild(this.nextButton);\r\n        this.paginationWrapperDownContainer.appendChild(this.paginationButtonsContainer);\r\n\r\n        this.paginationSelect.addEventListener(\"change\", () => {\r\n            this.pageLength = parseInt(this.paginationSelect.value);\r\n            this.currentPage = 1;\r\n            this.paginate();\r\n        });\r\n\r\n        this.prevButton.addEventListener('click', () => {\r\n            this.currentPage--;\r\n            this.paginate();\r\n        });\r\n\r\n        this.nextButton.addEventListener('click', () => {\r\n            this.currentPage++;\r\n            this.paginate();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        // Supprimer l'input de recherche\r\n        if (this.searchInput) {\r\n            this.searchInput.remove();\r\n        }\r\n\r\n        // Supprimer les flèches de tri et les gestionnaires d'événements\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            if (header._sortingHandler) {\r\n                header.removeEventListener(\"click\", header._sortingHandler);\r\n                delete header._sortingHandler;\r\n            }\r\n\r\n            let arrow = header.querySelector(\".sort-arrow\");\r\n            if (arrow) {\r\n                arrow.remove();\r\n            }\r\n        });\r\n\r\n        // Afficher toutes les lignes du tableau\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n        rows.forEach(row => {\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        if (this.paginationWrapperTopContainer) {\r\n            this.paginationWrapperTopContainer.remove();\r\n        }\r\n\r\n        if (this.paginationWrapperDownContainer) {\r\n            this.paginationWrapperDownContainer.remove();\r\n        }\r\n\r\n        // Supprimer la ligne de recherche (filtres) dans l'en-tête\r\n        let searchRow = this.table.querySelector(\".thead-search\");\r\n        if (searchRow) {\r\n            searchRow.remove();\r\n        }\r\n    }\r\n}"]}