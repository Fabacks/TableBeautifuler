{"version":3,"sources":["TableBeautifuller.js"],"names":["TableBeautifuller","constructor","tableId","options","this","table","document","querySelector","eventList","displayBloc","info","ordering","paging","searching","columnSearch","temperature","parseInt","orderString","order","getAttribute","initialOrder","JSON","parse","Array","isArray","pageLength","currentPage","selectItemPage","includes","push","sort","a","b","debounce_delai","debounceDelai","filters","createWrappers","addSearchInput","addSortingArrows","applyInitialOrder","addSearchColumn","addInfoControls","addPaginationControls","paginate","classList","add","paginationWrapperTopContainer","createElement","parentNode","insertBefore","paginationWrapperDownContainer","appendChild","debounce","func","delay","debounceTimer","context","args","arguments","clearTimeout","setTimeout","apply","addEventList","element","eventName","listener","addEventListener","searchInput","title","setAttribute","className","searchTable","value","bind","searchRow","querySelectorAll","forEach","header","cell","searchType","colName","innerHTML","indexOf","substring","trim","innerText","input","type","placeholder","e","cellIndex","target","select","uniqueValues","getUniqueValuesForColumn","val","option","textContent","colIndex","values","row","cells","hasAttribute","idx","dataset","arrow","headerClickHandler","sortDirection","sortTable","updateArrows","currentHeader","detectColumnType","rows","i","length","content","isNaN","direction","from","A","B","localeCompare","append","orderCriteria","toLowerCase","query","key","matched","style","display","filterKey","filterQuery","Object","entries","rowText","getElementsByTagName","map","join","matchesUsingLevenshtein","sub","levenshteinDistance","matrix","j","charAt","Math","min","totalRows","filter","totalPages","ceil","startIdx","endIdx","endDisplay","infoLabel","prevButton","disabled","nextButton","paginationButtonsContainer","button","removeChild","startPage","max","endPage","lastChild","lastElementChild","pageNumber","btn","toggle","paginationWrapperTop","paginationInfoTop","paginationSelect","num","selected","paginationInfoTopAfter","event","contains","destroy","removeEventListener","remove","attribut","hasOwnProperty"],"mappings":"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","file":"TableBeautifuller.min.js","sourcesContent":["class TableBeautifuller {\r\n    constructor(tableId, options = {}) {\r\n        this.table = document.querySelector(tableId);\r\n        this.eventList = [];\r\n\r\n        // Display\r\n        this.displayBloc = {};\r\n        this.displayBloc.info = options.info ?? true;\r\n        this.displayBloc.ordering = options.ordering ?? true;\r\n        this.displayBloc.paging = options.paging ?? true;\r\n        this.displayBloc.searching = options.searching ?? true;\r\n        this.displayBloc.columnSearch = options.columnSearch ?? true;\r\n\r\n        // Options\r\n        this.options = {};\r\n        this.options.temperature = parseInt(options.temperature) || 1;\r\n\r\n        // Initialisation du trie par défaut\r\n        let orderString = options.order || this.table.getAttribute(\"data-order\");\r\n        if (typeof orderString === \"string\") {\r\n            this.initialOrder = JSON.parse(orderString);\r\n        } else if (Array.isArray(orderString)) {\r\n            this.initialOrder = orderString;\r\n        } else {\r\n            this.initialOrder = [];\r\n        }\r\n\r\n        // Initialisation des valeurs pour la pagination (nombre item par page)\r\n        this.pageLength = options.pageLength || parseInt(this.table.getAttribute(\"data-page-length\")) || 10;\r\n        this.currentPage = 1;\r\n\r\n        // Initialisation du nombre d'item par page dans le selector\r\n        this.selectItemPage = options.selectItemPage || [10, 20, 30];\r\n        if (!this.selectItemPage.includes(this.pageLength)) {\r\n            this.selectItemPage.push(this.pageLength);\r\n            this.selectItemPage.sort((a, b) => a - b);\r\n        }\r\n\r\n        // Initialisation du debounce\r\n        this.debounce_delai = options.debounceDelai || 300;\r\n\r\n        // Initialisez un objet pour suivre les filtres actifs\r\n        this.filters = {}; \r\n\r\n        this.createWrappers();\r\n\r\n        if (this.displayBloc.searching ) {\r\n            this.addSearchInput();\r\n        }\r\n\r\n        if (this.displayBloc.ordering) {\r\n            this.addSortingArrows();\r\n            this.applyInitialOrder();\r\n        }\r\n\r\n        if (this.displayBloc.columnSearch) {\r\n            this.addSearchColumn();\r\n        }\r\n\r\n        if (this.displayBloc.info) {\r\n            this.addInfoControls();\r\n        }\r\n\r\n        if (this.displayBloc.paging) {\r\n            this.addPaginationControls();\r\n            this.paginate();\r\n        }\r\n    }\r\n\r\n    createWrappers() {\r\n        // Ajout de la classe \"tableBeautifuller\" à la table\r\n        this.table.classList.add('tableBeautifuller');\r\n\r\n        // Création du wrapper \"pagination-wrapper-top-container\" au dessus du tableau\r\n        this.paginationWrapperTopContainer = document.createElement('div');\r\n        this.paginationWrapperTopContainer.classList.add('tableBeautifuller', 'pagination-wrapper-top-container');\r\n        this.table.parentNode.insertBefore(this.paginationWrapperTopContainer, this.table);\r\n\r\n        // Création du wrapper \"pagination-down-container\" en dessous du tableau\r\n        this.paginationWrapperDownContainer = document.createElement('div');\r\n        this.paginationWrapperDownContainer.classList.add('tableBeautifuller', 'pagination-down-container');\r\n        this.table.parentNode.appendChild(this.paginationWrapperDownContainer);\r\n    }\r\n\r\n    debounce(func, delay) {\r\n        let debounceTimer;\r\n        return function() {\r\n            const context = this;\r\n            const args = arguments;\r\n            clearTimeout(debounceTimer);\r\n            debounceTimer = setTimeout(() => func.apply(context, args), delay);\r\n        };\r\n    }\r\n\r\n    addEventList(element, eventName, listener) {\r\n        // Ajouter l'écouteur d'événement à l'élément\r\n        element.addEventListener(eventName, listener);\r\n\r\n        // Stocker l'élément, l'événement et la fonction d'écouteur liée dans eventList\r\n        this.eventList.push({element, eventName, listener});\r\n    }\r\n\r\n    addSearchInput() {\r\n        this.searchInput = document.createElement(\"input\");\r\n        this.searchInput.title = \"Search in global table\";\r\n        this.searchInput.setAttribute(\"type\", \"text\");\r\n        this.searchInput.setAttribute(\"placeholder\", \"Recherche...\");\r\n        this.searchInput.className = \"search-input\";\r\n        this.paginationWrapperTopContainer.appendChild(this.searchInput);\r\n\r\n        this.addEventList(this.searchInput, 'keyup', this.debounce(() => {\r\n            this.searchTable(null, this.searchInput.value);\r\n        }, this.debounce_delai).bind(this));\r\n    }\r\n\r\n    addSearchColumn() {\r\n        let searchRow = document.createElement('tr');\r\n        searchRow.classList.add(\"thead-search\");\r\n\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            let cell = document.createElement('th');\r\n            let searchType = header.getAttribute('data-search') ?? '';\r\n            let colName = \"Search for \" + (header.innerHTML.indexOf('<span') !== -1 ? header.innerHTML.substring(0, header.innerHTML.indexOf('<span')).trim() : header.innerText);\r\n\r\n            switch (searchType) {\r\n                case \"input\":\r\n                    let input = document.createElement('input');\r\n                    input.type = \"text\";\r\n                    input.title = colName;\r\n                    input.placeholder = \"Rechercher dans la colonne...\";\r\n\r\n                    this.addEventList(input, 'input', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai).bind(this));\r\n                    cell.appendChild(input);\r\n                break;\r\n                case \"combobox\":\r\n                    let select = document.createElement('select');\r\n                    select.title = colName;\r\n                    let uniqueValues = this.getUniqueValuesForColumn(header.cellIndex);\r\n                    select.innerHTML = `<option value=\"\">Tout</option>`;\r\n                    uniqueValues.forEach(val => {\r\n                        let option = document.createElement('option');\r\n                        option.value = val;\r\n                        option.textContent = val;\r\n                        select.appendChild(option);\r\n                    });\r\n\r\n                    this.addEventList(select, 'change', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai).bind(this));\r\n                    cell.appendChild(select);\r\n                break;\r\n                default:\r\n                    return;\r\n            }\r\n\r\n            searchRow.appendChild(cell);\r\n        });\r\n\r\n        this.table.querySelector('thead').appendChild(searchRow);\r\n    }\r\n\r\n    getUniqueValuesForColumn(colIndex) {\r\n        let values = [];\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        rows.forEach(row => {\r\n            let cell = row.cells[colIndex];\r\n            let value = cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent.trim();\r\n            if (!values.includes(value)) {\r\n                values.push(value);\r\n            }\r\n        });\r\n        return values;\r\n    }\r\n\r\n    addSortingArrows() {\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach((header, idx) => {\r\n            header.dataset.sort = 'none';\r\n\r\n            let arrow = document.createElement('span');\r\n            arrow.classList.add('sort-arrow');\r\n            header.appendChild(arrow);\r\n\r\n            this.addEventList(header, 'click', this.headerClickHandler.bind(this, header, idx));\r\n        });\r\n    }\r\n\r\n    headerClickHandler(header, idx) {\r\n        let sortDirection = header.dataset.sort === 'asc' ? 'desc' : 'asc';\r\n        this.sortTable(idx, sortDirection);\r\n        header.dataset.sort = sortDirection;\r\n        this.updateArrows(header);\r\n    }\r\n\r\n    updateArrows(currentHeader) {\r\n        // Reset all arrows\r\n        this.table.querySelectorAll(\".sort-arrow\").forEach(arrow => {\r\n            arrow.textContent = '';\r\n        });\r\n\r\n        let arrowSpan = currentHeader.querySelector('.sort-arrow');\r\n        arrowSpan.textContent = currentHeader.dataset.sort === 'asc' ? '▲' : '▼';\r\n    }\r\n\r\n    detectColumnType(colIndex) {\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (rows[i].cells[colIndex]) {\r\n                let content = rows[i].cells[colIndex].hasAttribute('data-order') ? rows[i].cells[colIndex].getAttribute('data-order') : rows[i].cells[colIndex].textContent.trim();\r\n                if (!isNaN(content)) {\r\n                    return 'number';\r\n                }\r\n            }\r\n        }\r\n        return 'string';\r\n    }\r\n\r\n    sortTable(colIndex, direction) {\r\n        let type = this.detectColumnType(colIndex);\r\n        let rows = Array.from(this.table.querySelector(\"tbody\").querySelectorAll(\"tr\"));\r\n        rows.sort((a, b) => {\r\n            let A = a.cells[colIndex].hasAttribute('data-order') ? a.cells[colIndex].getAttribute('data-order') : a.cells[colIndex].textContent.trim();\r\n            let B = b.cells[colIndex].hasAttribute('data-order') ? b.cells[colIndex].getAttribute('data-order') : b.cells[colIndex].textContent.trim();\r\n\r\n            if (type === 'number') {\r\n                return direction === 'asc' ? A - B : B - A;\r\n            } else {\r\n                return direction === 'asc' ? A.localeCompare(B) : B.localeCompare(A);\r\n            }\r\n        });\r\n\r\n        this.table.querySelector(\"tbody\").append(...rows);\r\n    }\r\n\r\n    applyInitialOrder() {\r\n        this.initialOrder.forEach(orderCriteria => {\r\n            let [colIndex, direction] = orderCriteria;\r\n            this.sortTable(colIndex, direction.toLowerCase());\r\n\r\n            let header = this.table.querySelector(`th:nth-child(${colIndex + 1})`);\r\n            header.dataset.sort = direction.toLowerCase();\r\n            this.updateArrows(header);\r\n        });\r\n    }\r\n\r\n    searchTable(colIndex, query) {\r\n        query = query.trim();\r\n\r\n        // Mise à jour de l'objet des filtres, on utilise 'global' comme clé pour une recherche globale\r\n        let key = colIndex === null || colIndex === undefined ? \"global\" : colIndex;\r\n        if (query.trim() != '') {\r\n            this.filters[key] = query.toLowerCase();\r\n        } else {\r\n            delete this.filters[key];\r\n        }\r\n\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n\r\n        // Reset de la recherche\r\n        rows.forEach(row => {\r\n            row.dataset.matched = \"true\";\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        rows.forEach(row => {\r\n            for (const [filterKey, filterQuery] of Object.entries(this.filters)) {\r\n                if (row.dataset.matched !== \"true\") \r\n                    return;\r\n\r\n                let rowText = \"\"\r\n                if (filterKey !== 'global') {\r\n                    let cell = row.cells[parseInt(filterKey)];\r\n                    rowText = cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent;\r\n                } else {\r\n                    let cells = Array.from(row.getElementsByTagName(\"td\"));\r\n                    rowText = Array.from(cells).map(cell => cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent).join(' ');\r\n                }\r\n\r\n                rowText = rowText.trim().toLowerCase();\r\n                if ( !this.matchesUsingLevenshtein(rowText, filterQuery, this.options.temperature) ){\r\n                    row.style.display = \"none\";\r\n                    row.dataset.matched = \"false\";\r\n                }\r\n            }\r\n        });\r\n\r\n        // Remise à zéro de la pagination et repagination avec les résultats filtrés\r\n        this.currentPage = 1;\r\n        this.paginate();\r\n    }\r\n\r\n    matchesUsingLevenshtein(rowText, filterQuery, temperature) {\r\n        if ( rowText.indexOf(filterQuery) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        if( temperature == 0 || filterQuery.length < 4 || typeof rowText !== 'string' || typeof filterQuery !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i <= rowText.length - filterQuery.length; i++) {\r\n            let sub = rowText.substring(i, i + filterQuery.length);\r\n            if (this.levenshteinDistance(sub, filterQuery) <= temperature) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    levenshteinDistance(a, b) {\r\n        const matrix = [];\r\n        let i, j;\r\n\r\n        for (i = 0; i <= b.length; i++) {\r\n            matrix[i] = [i];\r\n        }\r\n\r\n        for (j = 0; j <= a.length; j++) {\r\n            matrix[0][j] = j;\r\n        }\r\n\r\n        for (i = 1; i <= b.length; i++) {\r\n            for (j = 1; j <= a.length; j++) {\r\n                if (b.charAt(i - 1) === a.charAt(j - 1)) {\r\n                    matrix[i][j] = matrix[i - 1][j - 1];\r\n                } else {\r\n                    matrix[i][j] = Math.min(\r\n                        matrix[i - 1][j - 1] + 1,\r\n                        matrix[i][j - 1] + 1,\r\n                        matrix[i - 1][j] + 1\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return matrix[b.length][a.length];\r\n    }\r\n\r\n    paginate() {\r\n        let totalRows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\").length;\r\n        let totalPages = Math.ceil(totalRows / this.pageLength);\r\n        let startIdx = (this.currentPage - 1) * this.pageLength;\r\n        let endIdx = startIdx + this.pageLength;\r\n\r\n        if( this.displayBloc.info) {\r\n            let endDisplay = endIdx > totalRows ? totalRows : endIdx;\r\n            this.infoLabel.textContent = `Affichage de l'élément ${startIdx + 1} à ${endDisplay} sur ${totalRows} éléments`;\r\n        }\r\n\r\n        // Control display of previous & next buttons\r\n        this.prevButton.disabled = this.currentPage <= 1;\r\n        this.nextButton.disabled = this.currentPage >= totalPages\r\n\r\n        let rows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\");\r\n        rows.forEach((row, idx) => {\r\n            row.style.display = idx < startIdx || idx >= endIdx ? \"none\" : \"\";\r\n        });\r\n\r\n        let buttonsDelete = this.paginationButtonsContainer.querySelectorAll('.page-btn');\r\n        buttonsDelete.forEach((button) => {\r\n            this.paginationButtonsContainer.removeChild(button);\r\n        });\r\n\r\n        let startPage = Math.max(1, this.currentPage - 3);\r\n        let endPage = Math.min(totalPages, this.currentPage + 3) -1;\r\n\r\n        let lastChild = this.paginationButtonsContainer.lastElementChild;\r\n        for (let i = startPage-1; i <= endPage; i++) {\r\n            let pageNumber = startPage + i;\r\n            let btn = document.createElement('button');\r\n            btn.textContent = pageNumber;\r\n            btn.setAttribute('data-page', pageNumber);\r\n            btn.className = 'page-btn';\r\n            btn.classList.toggle('active', pageNumber === this.currentPage);\r\n\r\n            this.paginationButtonsContainer.insertBefore(btn, lastChild);\r\n        }\r\n\r\n    }\r\n\r\n    addInfoControls() {\r\n        this.infoLabel = document.createElement('span');\r\n        this.infoLabel.className = 'pagination-info';\r\n        this.paginationWrapperDownContainer.appendChild(this.infoLabel);\r\n    }\r\n\r\n    addPaginationControls() {\r\n        // Items per page select\r\n        this.paginationWrapperTop = document.createElement('div');\r\n        this.paginationWrapperTop.className = 'pagination-wrapper-top';\r\n\r\n        this.paginationInfoTop = document.createElement(\"span\");\r\n        this.paginationInfoTop.textContent = \"Afficher\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTop);\r\n\r\n        this.paginationSelect = document.createElement(\"select\");\r\n        this.paginationSelect.title = \"List for numbers items display\";\r\n        this.selectItemPage.forEach(num => {\r\n            let option = document.createElement(\"option\");\r\n            option.value = num;\r\n            option.textContent = num;\r\n            option.selected = num === this.pageLength ? true : false;\r\n            this.paginationSelect.appendChild(option);\r\n        });\r\n        this.paginationSelect.value = this.pageLength;\r\n        this.paginationWrapperTop.appendChild(this.paginationSelect);\r\n\r\n        this.paginationInfoTopAfter = document.createElement(\"span\");\r\n        this.paginationInfoTopAfter.textContent = \"éléments\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTopAfter);\r\n\r\n        this.paginationWrapperTopContainer.appendChild(this.paginationWrapperTop);\r\n\r\n        // Create du wrapper \"pagination-buttons-container\" for boutton\r\n        this.paginationButtonsContainer = document.createElement('div');\r\n        this.paginationButtonsContainer.className = 'pagination-buttons-container';\r\n\r\n        this.prevButton = document.createElement('button');\r\n        this.prevButton.textContent = 'Précédent';\r\n        this.prevButton.className = 'page-prev';\r\n        this.paginationButtonsContainer.appendChild(this.prevButton);\r\n\r\n        this.nextButton = document.createElement('button');\r\n        this.nextButton.textContent = 'Suivant';\r\n        this.nextButton.className = 'page-next';\r\n        this.paginationButtonsContainer.appendChild(this.nextButton);\r\n        this.paginationWrapperDownContainer.appendChild(this.paginationButtonsContainer);\r\n\r\n        this.addEventList(this.paginationSelect, 'change', (() => {\r\n            this.pageLength = parseInt(this.paginationSelect.value);\r\n            this.currentPage = 1;\r\n            this.paginate();\r\n        }).bind(this));\r\n\r\n        this.addEventList(this.paginationButtonsContainer, 'click', ((event) => {\r\n            let classList = event.target.classList;\r\n            if ( classList.contains('page-btn') )\r\n                this.currentPage = parseInt(event.target.getAttribute('data-page'));\r\n            else if (classList.contains('page-prev') )\r\n                this.currentPage--;\r\n            else if (classList.contains('page-next') )\r\n                this.currentPage++;\r\n\r\n            this.paginate();\r\n        }).bind(this));\r\n    }\r\n\r\n    destroy() {\r\n        // Supprimer tous les écouteurs d'événements\r\n        this.eventList.forEach(({ element, eventName, listener }) => {\r\n            element.removeEventListener(eventName, listener);\r\n        });\r\n\r\n        // Supprimer les flèches de tri\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            let arrow = header.querySelector(\".sort-arrow\");\r\n            if (arrow) {\r\n                arrow.remove();\r\n            }\r\n        });\r\n\r\n        // Afficher toutes les lignes du tableau\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n        rows.forEach(row => {\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        // Supprime le wrapper au dessus du tableau\r\n        if (this.paginationWrapperTopContainer) {\r\n            this.paginationWrapperTopContainer.remove();\r\n        }\r\n\r\n        // Supprime le wrapper en dessosu du tableau \r\n        if (this.paginationWrapperDownContainer) {\r\n            this.paginationWrapperDownContainer.remove();\r\n        }\r\n\r\n        // Supprimer la ligne de recherche (filtres) dans l'en-tête\r\n        let searchRow = this.table.querySelector(\".thead-search\");\r\n        if (searchRow) {\r\n            searchRow.remove();\r\n        }\r\n\r\n        // Parcourir tous les attributs de l'objet et les définir à null\r\n        for (let attribut in this) {\r\n            if (this.hasOwnProperty(attribut)) {\r\n            this[attribut] = null;\r\n            }\r\n        }\r\n    }\r\n}"]}