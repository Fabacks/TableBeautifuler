{"version":3,"sources":["TableBeautifuller.js"],"names":["TableBeautifuller","constructor","tableId","options","this","table","document","querySelector","displayBloc","info","ordering","paging","searching","columnSearch","orderString","order","getAttribute","initialOrder","JSON","parse","Array","isArray","pageLength","parseInt","currentPage","selectItemPage","includes","push","sort","a","b","debounce_delai","debounceDelai","filters","createWrappers","addSearchInput","addSortingArrows","applyInitialOrder","addSearchColumn","addInfoControls","addPaginationControls","paginate","classList","add","paginationWrapperTopContainer","createElement","parentNode","insertBefore","paginationWrapperDownContainer","appendChild","debounce","func","delay","debounceTimer","context","args","arguments","clearTimeout","setTimeout","apply","searchInput","setAttribute","className","addEventListener","searchTable","value","searchRow","querySelectorAll","forEach","header","cell","input","type","e","cellIndex","target","select","uniqueValues","getUniqueValuesForColumn","innerHTML","val","option","textContent","colIndex","values","row","cells","trim","idx","dataset","arrow","boundHandler","headerClickHandler","bind","_sortingHandler","sortDirection","sortTable","updateArrows","currentHeader","detectColumnType","rows","i","length","content","hasAttribute","isNaN","direction","from","A","B","localeCompare","append","orderCriteria","toLowerCase","query","key","matched","style","display","filterKey","filterQuery","Object","entries","rowText","getElementsByTagName","map","join","indexOf","totalRows","filter","totalPages","Math","ceil","startIdx","endIdx","endDisplay","infoLabel","prevButton","disabled","nextButton","paginationButtonsContainer","button","removeChild","startPage","max","endPage","min","lastChild","lastElementChild","pageNumber","btn","toggle","paginationWrapperTop","paginationInfoTop","paginationSelect","num","selected","paginationInfoTopAfter","event","contains","destroy","remove","removeEventListener"],"mappings":"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","file":"TableBeautifuller.min.js","sourcesContent":["class TableBeautifuller {\r\n    constructor(tableId, options = {}) {\r\n        this.table = document.querySelector(tableId);\r\n\r\n        // Display\r\n        this.displayBloc = {};\r\n        this.displayBloc.info = options.info ?? true;\r\n        this.displayBloc.ordering = options.ordering ?? true;\r\n        this.displayBloc.paging = options.paging ?? true;\r\n        this.displayBloc.searching = options.searching ?? true;\r\n        this.displayBloc.columnSearch = options.columnSearch ?? true;\r\n\r\n        // Initialisation du trie par défaut\r\n        let orderString = options.order || this.table.getAttribute(\"data-order\");\r\n        if (typeof orderString === \"string\") {\r\n            this.initialOrder = JSON.parse(orderString);\r\n        } else if (Array.isArray(orderString)) {\r\n            this.initialOrder = orderString;\r\n        } else {\r\n            this.initialOrder = [];\r\n        }\r\n\r\n        // Initialisation des valeurs pour la pagination (nombre item par page)\r\n        this.pageLength = options.pageLength || parseInt(this.table.getAttribute(\"data-page-length\")) || 10;\r\n        this.currentPage = 1;\r\n\r\n        // Initialisation du nombre d'item par page dans le selector\r\n        this.selectItemPage = options.selectItemPage || [10, 20, 30];\r\n        if (!this.selectItemPage.includes(this.pageLength)) {\r\n            this.selectItemPage.push(this.pageLength);\r\n            this.selectItemPage.sort((a, b) => a - b);\r\n        }\r\n\r\n        // Initialisation du debounce\r\n        this.debounce_delai = options.debounceDelai || 300;\r\n\r\n        // Initialisez un objet pour suivre les filtres actifs\r\n        this.filters = {}; \r\n\r\n        this.createWrappers();\r\n\r\n        if (this.displayBloc.searching ) {\r\n            this.addSearchInput();\r\n        }\r\n\r\n        if (this.displayBloc.ordering) {\r\n            this.addSortingArrows();\r\n            this.applyInitialOrder();\r\n        }\r\n\r\n        if (this.displayBloc.columnSearch) {\r\n            this.addSearchColumn();\r\n        }\r\n\r\n        if (this.displayBloc.info) {\r\n            this.addInfoControls();\r\n        }\r\n\r\n        if (this.displayBloc.paging) {\r\n            this.addPaginationControls();\r\n            this.paginate();\r\n        }\r\n    }\r\n\r\n    createWrappers() {\r\n        // Ajout de la classe \"tableBeautifuller\" à la table\r\n        this.table.classList.add('tableBeautifuller');\r\n\r\n        // Création du wrapper \"pagination-wrapper-top-container\" au dessus du tableau\r\n        this.paginationWrapperTopContainer = document.createElement('div');\r\n        this.paginationWrapperTopContainer.classList.add('tableBeautifuller', 'pagination-wrapper-top-container');\r\n        this.table.parentNode.insertBefore(this.paginationWrapperTopContainer, this.table);\r\n\r\n        // Création du wrapper \"pagination-down-container\" en dessous du tableau\r\n        this.paginationWrapperDownContainer = document.createElement('div');\r\n        this.paginationWrapperDownContainer.classList.add('tableBeautifuller', 'pagination-down-container');\r\n        this.table.parentNode.appendChild(this.paginationWrapperDownContainer);\r\n    }\r\n\r\n    debounce(func, delay) {\r\n        let debounceTimer;\r\n        return function() {\r\n            const context = this;\r\n            const args = arguments;\r\n            clearTimeout(debounceTimer);\r\n            debounceTimer = setTimeout(() => func.apply(context, args), delay);\r\n        };\r\n    }\r\n\r\n    addSearchInput() {\r\n        this.searchInput = document.createElement(\"input\");\r\n        this.searchInput.setAttribute(\"type\", \"text\");\r\n        this.searchInput.setAttribute(\"placeholder\", \"Recherche...\");\r\n        this.searchInput.className = \"search-input\";\r\n        this.paginationWrapperTopContainer.appendChild(this.searchInput);\r\n\r\n        this.searchInput.addEventListener(\"keyup\", this.debounce(() => {\r\n            this.searchTable(null, this.searchInput.value);\r\n        }, this.debounce_delai));\r\n    }\r\n\r\n    addSearchColumn() {\r\n        let searchRow = document.createElement('tr');\r\n        searchRow.classList.add(\"thead-search\");\r\n\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            let cell = document.createElement('th');\r\n            let searchType = header.getAttribute('data-search') ?? '';\r\n\r\n            switch (searchType) {\r\n                case \"input\":\r\n                    let input = document.createElement('input');\r\n                    input.type = \"text\";\r\n                    input.addEventListener('input', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai));\r\n                    cell.appendChild(input);\r\n                break;\r\n                case \"combobox\":\r\n                    let select = document.createElement('select');\r\n                    let uniqueValues = this.getUniqueValuesForColumn(header.cellIndex);\r\n                    select.innerHTML = `<option value=\"\">Tout</option>`;\r\n                    uniqueValues.forEach(val => {\r\n                        let option = document.createElement('option');\r\n                        option.value = val;\r\n                        option.textContent = val;\r\n                        select.appendChild(option);\r\n                    });\r\n\r\n                    select.addEventListener('change', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai));\r\n                    cell.appendChild(select);\r\n                break;\r\n                default:\r\n                    return;\r\n            }\r\n\r\n            searchRow.appendChild(cell);\r\n        });\r\n\r\n        this.table.querySelector('thead').appendChild(searchRow);\r\n    }\r\n\r\n    getUniqueValuesForColumn(colIndex) {\r\n        let values = [];\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        rows.forEach(row => {\r\n            let value = row.cells[colIndex].textContent.trim();\r\n            if (!values.includes(value)) {\r\n                values.push(value);\r\n            }\r\n        });\r\n        return values;\r\n    }\r\n\r\n    addSortingArrows() {\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach((header, idx) => {\r\n            header.dataset.sort = 'none';\r\n\r\n            let arrow = document.createElement('span');\r\n            arrow.classList.add('sort-arrow');\r\n            header.appendChild(arrow);\r\n\r\n            let boundHandler = this.headerClickHandler.bind(this, header, idx);\r\n            header._sortingHandler = boundHandler;\r\n\r\n            header.addEventListener(\"click\", boundHandler);\r\n        });\r\n    }\r\n\r\n    headerClickHandler(header, idx) {\r\n        let sortDirection = header.dataset.sort === 'asc' ? 'desc' : 'asc';\r\n        this.sortTable(idx, sortDirection);\r\n        header.dataset.sort = sortDirection;\r\n        this.updateArrows(header);\r\n    }\r\n\r\n    updateArrows(currentHeader) {\r\n        // Reset all arrows\r\n        this.table.querySelectorAll(\".sort-arrow\").forEach(arrow => {\r\n            arrow.textContent = '';\r\n        });\r\n\r\n        let arrowSpan = currentHeader.querySelector('.sort-arrow');\r\n        arrowSpan.textContent = currentHeader.dataset.sort === 'asc' ? '▲' : '▼';\r\n    }\r\n\r\n    detectColumnType(colIndex) {\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (rows[i].cells[colIndex]) {\r\n                let content = rows[i].cells[colIndex].hasAttribute('data-order') ? rows[i].cells[colIndex].getAttribute('data-order') : rows[i].cells[colIndex].textContent.trim();\r\n                if (!isNaN(content)) {\r\n                    return 'number';\r\n                }\r\n            }\r\n        }\r\n        return 'string';\r\n    }\r\n\r\n    sortTable(colIndex, direction) {\r\n        let type = this.detectColumnType(colIndex);\r\n        let rows = Array.from(this.table.querySelector(\"tbody\").querySelectorAll(\"tr\"));\r\n        rows.sort((a, b) => {\r\n            let A = a.cells[colIndex].hasAttribute('data-order') ? a.cells[colIndex].getAttribute('data-order') : a.cells[colIndex].textContent.trim();\r\n            let B = b.cells[colIndex].hasAttribute('data-order') ? b.cells[colIndex].getAttribute('data-order') : b.cells[colIndex].textContent.trim();\r\n\r\n            if (type === 'number') {\r\n                return direction === 'asc' ? A - B : B - A;\r\n            } else {\r\n                return direction === 'asc' ? A.localeCompare(B) : B.localeCompare(A);\r\n            }\r\n        });\r\n\r\n        this.table.querySelector(\"tbody\").append(...rows);\r\n    }\r\n\r\n    applyInitialOrder() {\r\n        this.initialOrder.forEach(orderCriteria => {\r\n            let [colIndex, direction] = orderCriteria;\r\n            this.sortTable(colIndex, direction.toLowerCase());\r\n\r\n            let header = this.table.querySelector(`th:nth-child(${colIndex + 1})`);\r\n            header.dataset.sort = direction.toLowerCase();\r\n            this.updateArrows(header);\r\n        });\r\n    }\r\n\r\n    searchTable(colIndex, query) {\r\n        // Mise à jour de l'objet des filtres, on utilise 'global' comme clé pour une recherche globale\r\n        let key = colIndex === null || colIndex === undefined ? \"global\" : colIndex;\r\n        if (query.trim() != '') {\r\n            this.filters[key] = query.toLowerCase();\r\n        } else {\r\n            delete this.filters[key];\r\n        }\r\n\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n\r\n        // Reset de la recherche\r\n        rows.forEach(row => {\r\n            row.dataset.matched = \"true\";\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        rows.forEach(row => {\r\n            for (const [filterKey, filterQuery] of Object.entries(this.filters)) {\r\n                if (row.dataset.matched !== \"true\") \r\n                    return;\r\n\r\n                let rowText = \"\"\r\n                if (filterKey !== 'global') {\r\n                    let cell = row.cells[parseInt(filterKey)];\r\n                    rowText = cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent;\r\n                } else {\r\n                    let cells = Array.from(row.getElementsByTagName(\"td\"));\r\n                    rowText = Array.from(cells).map(cell => cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent).join(' ');\r\n                }\r\n\r\n                if (rowText.trim().toLowerCase().indexOf(filterQuery) === -1) {\r\n                    row.style.display = \"none\";\r\n                    row.dataset.matched = \"false\";\r\n                }\r\n            }\r\n        });\r\n\r\n        // Remise à zéro de la pagination et repagination avec les résultats filtrés\r\n        this.currentPage = 1;\r\n        this.paginate();\r\n    }\r\n\r\n    paginate() {\r\n        let totalRows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\").length;\r\n        let totalPages = Math.ceil(totalRows / this.pageLength);\r\n        let startIdx = (this.currentPage - 1) * this.pageLength;\r\n        let endIdx = startIdx + this.pageLength;\r\n\r\n        if( this.displayBloc.info) {\r\n            let endDisplay = endIdx > totalRows ? totalRows : endIdx;\r\n            this.infoLabel.textContent = `Affichage de l'élément ${startIdx + 1} à ${endDisplay} sur ${totalRows} éléments`;\r\n        }\r\n\r\n        // Control display of previous & next buttons\r\n        this.prevButton.disabled = this.currentPage <= 1;\r\n        this.nextButton.disabled = this.currentPage >= totalPages\r\n\r\n        let rows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\");\r\n        rows.forEach((row, idx) => {\r\n            row.style.display = idx < startIdx || idx >= endIdx ? \"none\" : \"\";\r\n        });\r\n\r\n        let buttonsDelete = this.paginationButtonsContainer.querySelectorAll('.page-btn');\r\n        buttonsDelete.forEach((button) => {\r\n            this.paginationButtonsContainer.removeChild(button);\r\n        });\r\n\r\n        let startPage = Math.max(1, this.currentPage - 3);\r\n        let endPage = Math.min(totalPages, this.currentPage + 3) -1;\r\n\r\n        let lastChild = this.paginationButtonsContainer.lastElementChild;\r\n        for (let i = startPage-1; i <= endPage; i++) {\r\n            let pageNumber = startPage + i;\r\n            let btn = document.createElement('button');\r\n            btn.textContent = pageNumber;\r\n            btn.setAttribute('data-page', pageNumber);\r\n            btn.className = 'page-btn';\r\n            btn.classList.toggle('active', pageNumber === this.currentPage);\r\n\r\n            this.paginationButtonsContainer.insertBefore(btn, lastChild);\r\n        }\r\n\r\n    }\r\n\r\n    addInfoControls() {\r\n        this.infoLabel = document.createElement('span');\r\n        this.infoLabel.className = 'pagination-info';\r\n        this.paginationWrapperDownContainer.appendChild(this.infoLabel);\r\n    }\r\n\r\n    addPaginationControls() {\r\n        // Items per page select\r\n        this.paginationWrapperTop = document.createElement('div');\r\n        this.paginationWrapperTop.className = 'pagination-wrapper-top';\r\n\r\n        this.paginationInfoTop = document.createElement(\"span\");\r\n        this.paginationInfoTop.textContent = \"Afficher\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTop);\r\n\r\n        this.paginationSelect = document.createElement(\"select\");\r\n        this.selectItemPage.forEach(num => {\r\n            let option = document.createElement(\"option\");\r\n            option.value = num;\r\n            option.textContent = num;\r\n            option.selected = num === this.pageLength ? true : false;\r\n            this.paginationSelect.appendChild(option);\r\n        });\r\n        this.paginationSelect.value = this.pageLength;\r\n        this.paginationWrapperTop.appendChild(this.paginationSelect);\r\n\r\n        this.paginationInfoTopAfter = document.createElement(\"span\");\r\n        this.paginationInfoTopAfter.textContent = \"éléments\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTopAfter);\r\n\r\n        this.paginationWrapperTopContainer.appendChild(this.paginationWrapperTop);\r\n\r\n        // Create du wrapper \"pagination-buttons-container\" for boutton\r\n        this.paginationButtonsContainer = document.createElement('div');\r\n        this.paginationButtonsContainer.className = 'pagination-buttons-container';\r\n\r\n        this.prevButton = document.createElement('button');\r\n        this.prevButton.textContent = 'Précédent';\r\n        this.prevButton.className = 'page-prev';\r\n        this.paginationButtonsContainer.appendChild(this.prevButton);\r\n\r\n        this.nextButton = document.createElement('button');\r\n        this.nextButton.textContent = 'Suivant';\r\n        this.nextButton.className = 'page-next';\r\n        this.paginationButtonsContainer.appendChild(this.nextButton);\r\n        this.paginationWrapperDownContainer.appendChild(this.paginationButtonsContainer);\r\n\r\n        this.paginationSelect.addEventListener(\"change\", () => {\r\n            this.pageLength = parseInt(this.paginationSelect.value);\r\n            this.currentPage = 1;\r\n            this.paginate();\r\n        });\r\n\r\n        this.paginationButtonsContainer.addEventListener('click', (event) => {\r\n            let classList = event.target.classList;\r\n            if ( classList.contains('page-btn') )\r\n                this.currentPage = parseInt(event.target.getAttribute('data-page'));\r\n            else if (classList.contains('page-prev') )\r\n                this.currentPage--;\r\n            else if (classList.contains('page-next') )\r\n                this.currentPage++;\r\n\r\n            this.paginate();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        // Supprimer l'input de recherche\r\n        if (this.searchInput) {\r\n            this.searchInput.remove();\r\n        }\r\n\r\n        // Supprimer les flèches de tri et les gestionnaires d'événements\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            if (header._sortingHandler) {\r\n                header.removeEventListener(\"click\", header._sortingHandler);\r\n                delete header._sortingHandler;\r\n            }\r\n\r\n            let arrow = header.querySelector(\".sort-arrow\");\r\n            if (arrow) {\r\n                arrow.remove();\r\n            }\r\n        });\r\n\r\n        // Afficher toutes les lignes du tableau\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n        rows.forEach(row => {\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        if (this.paginationWrapperTopContainer) {\r\n            this.paginationWrapperTopContainer.remove();\r\n        }\r\n\r\n        if (this.paginationWrapperDownContainer) {\r\n            this.paginationWrapperDownContainer.remove();\r\n        }\r\n\r\n        // Supprimer la ligne de recherche (filtres) dans l'en-tête\r\n        let searchRow = this.table.querySelector(\".thead-search\");\r\n        if (searchRow) {\r\n            searchRow.remove();\r\n        }\r\n    }\r\n}"]}