{"version":3,"sources":["TableBeautifuller.js"],"names":["TableBeautifuller","constructor","tableId","options","this","table","document","querySelector","displayBloc","info","ordering","paging","searching","columnSearch","temperature","parseInt","orderString","order","getAttribute","initialOrder","JSON","parse","Array","isArray","pageLength","currentPage","selectItemPage","includes","push","sort","a","b","debounce_delai","debounceDelai","filters","createWrappers","addSearchInput","addSortingArrows","applyInitialOrder","addSearchColumn","addInfoControls","addPaginationControls","paginate","classList","add","paginationWrapperTopContainer","createElement","parentNode","insertBefore","paginationWrapperDownContainer","appendChild","debounce","func","delay","debounceTimer","context","args","arguments","clearTimeout","setTimeout","apply","searchInput","setAttribute","className","addEventListener","searchTable","value","searchRow","querySelectorAll","forEach","header","cell","input","type","e","cellIndex","target","select","uniqueValues","getUniqueValuesForColumn","innerHTML","val","option","textContent","colIndex","values","row","cells","trim","idx","dataset","arrow","boundHandler","headerClickHandler","bind","_sortingHandler","sortDirection","sortTable","updateArrows","currentHeader","detectColumnType","rows","i","length","content","hasAttribute","isNaN","direction","from","A","B","localeCompare","append","orderCriteria","toLowerCase","query","key","matched","style","display","filterKey","filterQuery","Object","entries","rowText","getElementsByTagName","map","join","matchesUsingLevenshtein","indexOf","sub","substring","levenshteinDistance","matrix","j","charAt","Math","min","totalRows","filter","totalPages","ceil","startIdx","endIdx","endDisplay","infoLabel","prevButton","disabled","nextButton","paginationButtonsContainer","button","removeChild","startPage","max","endPage","lastChild","lastElementChild","pageNumber","btn","toggle","paginationWrapperTop","paginationInfoTop","paginationSelect","num","selected","paginationInfoTopAfter","event","contains","destroy","remove","removeEventListener"],"mappings":"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","file":"TableBeautifuller.min.js","sourcesContent":["class TableBeautifuller {\r\n    constructor(tableId, options = {}) {\r\n        this.table = document.querySelector(tableId);\r\n\r\n        // Display\r\n        this.displayBloc = {};\r\n        this.displayBloc.info = options.info ?? true;\r\n        this.displayBloc.ordering = options.ordering ?? true;\r\n        this.displayBloc.paging = options.paging ?? true;\r\n        this.displayBloc.searching = options.searching ?? true;\r\n        this.displayBloc.columnSearch = options.columnSearch ?? true;\r\n\r\n        // Options\r\n        this.options = {};\r\n        this.options.temperature = parseInt(options.temperature) || 1;\r\n\r\n        // Initialisation du trie par défaut\r\n        let orderString = options.order || this.table.getAttribute(\"data-order\");\r\n        if (typeof orderString === \"string\") {\r\n            this.initialOrder = JSON.parse(orderString);\r\n        } else if (Array.isArray(orderString)) {\r\n            this.initialOrder = orderString;\r\n        } else {\r\n            this.initialOrder = [];\r\n        }\r\n\r\n        // Initialisation des valeurs pour la pagination (nombre item par page)\r\n        this.pageLength = options.pageLength || parseInt(this.table.getAttribute(\"data-page-length\")) || 10;\r\n        this.currentPage = 1;\r\n\r\n        // Initialisation du nombre d'item par page dans le selector\r\n        this.selectItemPage = options.selectItemPage || [10, 20, 30];\r\n        if (!this.selectItemPage.includes(this.pageLength)) {\r\n            this.selectItemPage.push(this.pageLength);\r\n            this.selectItemPage.sort((a, b) => a - b);\r\n        }\r\n\r\n        // Initialisation du debounce\r\n        this.debounce_delai = options.debounceDelai || 300;\r\n\r\n        // Initialisez un objet pour suivre les filtres actifs\r\n        this.filters = {}; \r\n\r\n        this.createWrappers();\r\n\r\n        if (this.displayBloc.searching ) {\r\n            this.addSearchInput();\r\n        }\r\n\r\n        if (this.displayBloc.ordering) {\r\n            this.addSortingArrows();\r\n            this.applyInitialOrder();\r\n        }\r\n\r\n        if (this.displayBloc.columnSearch) {\r\n            this.addSearchColumn();\r\n        }\r\n\r\n        if (this.displayBloc.info) {\r\n            this.addInfoControls();\r\n        }\r\n\r\n        if (this.displayBloc.paging) {\r\n            this.addPaginationControls();\r\n            this.paginate();\r\n        }\r\n    }\r\n\r\n    createWrappers() {\r\n        // Ajout de la classe \"tableBeautifuller\" à la table\r\n        this.table.classList.add('tableBeautifuller');\r\n\r\n        // Création du wrapper \"pagination-wrapper-top-container\" au dessus du tableau\r\n        this.paginationWrapperTopContainer = document.createElement('div');\r\n        this.paginationWrapperTopContainer.classList.add('tableBeautifuller', 'pagination-wrapper-top-container');\r\n        this.table.parentNode.insertBefore(this.paginationWrapperTopContainer, this.table);\r\n\r\n        // Création du wrapper \"pagination-down-container\" en dessous du tableau\r\n        this.paginationWrapperDownContainer = document.createElement('div');\r\n        this.paginationWrapperDownContainer.classList.add('tableBeautifuller', 'pagination-down-container');\r\n        this.table.parentNode.appendChild(this.paginationWrapperDownContainer);\r\n    }\r\n\r\n    debounce(func, delay) {\r\n        let debounceTimer;\r\n        return function() {\r\n            const context = this;\r\n            const args = arguments;\r\n            clearTimeout(debounceTimer);\r\n            debounceTimer = setTimeout(() => func.apply(context, args), delay);\r\n        };\r\n    }\r\n\r\n    addSearchInput() {\r\n        this.searchInput = document.createElement(\"input\");\r\n        this.searchInput.setAttribute(\"type\", \"text\");\r\n        this.searchInput.setAttribute(\"placeholder\", \"Recherche...\");\r\n        this.searchInput.className = \"search-input\";\r\n        this.paginationWrapperTopContainer.appendChild(this.searchInput);\r\n\r\n        this.searchInput.addEventListener(\"keyup\", this.debounce(() => {\r\n            this.searchTable(null, this.searchInput.value);\r\n        }, this.debounce_delai));\r\n    }\r\n\r\n    addSearchColumn() {\r\n        let searchRow = document.createElement('tr');\r\n        searchRow.classList.add(\"thead-search\");\r\n\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            let cell = document.createElement('th');\r\n            let searchType = header.getAttribute('data-search') ?? '';\r\n\r\n            switch (searchType) {\r\n                case \"input\":\r\n                    let input = document.createElement('input');\r\n                    input.type = \"text\";\r\n                    input.addEventListener('input', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai));\r\n                    cell.appendChild(input);\r\n                break;\r\n                case \"combobox\":\r\n                    let select = document.createElement('select');\r\n                    let uniqueValues = this.getUniqueValuesForColumn(header.cellIndex);\r\n                    select.innerHTML = `<option value=\"\">Tout</option>`;\r\n                    uniqueValues.forEach(val => {\r\n                        let option = document.createElement('option');\r\n                        option.value = val;\r\n                        option.textContent = val;\r\n                        select.appendChild(option);\r\n                    });\r\n\r\n                    select.addEventListener('change', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai));\r\n                    cell.appendChild(select);\r\n                break;\r\n                default:\r\n                    return;\r\n            }\r\n\r\n            searchRow.appendChild(cell);\r\n        });\r\n\r\n        this.table.querySelector('thead').appendChild(searchRow);\r\n    }\r\n\r\n    getUniqueValuesForColumn(colIndex) {\r\n        let values = [];\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        rows.forEach(row => {\r\n            let value = row.cells[colIndex].textContent.trim();\r\n            if (!values.includes(value)) {\r\n                values.push(value);\r\n            }\r\n        });\r\n        return values;\r\n    }\r\n\r\n    addSortingArrows() {\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach((header, idx) => {\r\n            header.dataset.sort = 'none';\r\n\r\n            let arrow = document.createElement('span');\r\n            arrow.classList.add('sort-arrow');\r\n            header.appendChild(arrow);\r\n\r\n            let boundHandler = this.headerClickHandler.bind(this, header, idx);\r\n            header._sortingHandler = boundHandler;\r\n\r\n            header.addEventListener(\"click\", boundHandler);\r\n        });\r\n    }\r\n\r\n    headerClickHandler(header, idx) {\r\n        let sortDirection = header.dataset.sort === 'asc' ? 'desc' : 'asc';\r\n        this.sortTable(idx, sortDirection);\r\n        header.dataset.sort = sortDirection;\r\n        this.updateArrows(header);\r\n    }\r\n\r\n    updateArrows(currentHeader) {\r\n        // Reset all arrows\r\n        this.table.querySelectorAll(\".sort-arrow\").forEach(arrow => {\r\n            arrow.textContent = '';\r\n        });\r\n\r\n        let arrowSpan = currentHeader.querySelector('.sort-arrow');\r\n        arrowSpan.textContent = currentHeader.dataset.sort === 'asc' ? '▲' : '▼';\r\n    }\r\n\r\n    detectColumnType(colIndex) {\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (rows[i].cells[colIndex]) {\r\n                let content = rows[i].cells[colIndex].hasAttribute('data-order') ? rows[i].cells[colIndex].getAttribute('data-order') : rows[i].cells[colIndex].textContent.trim();\r\n                if (!isNaN(content)) {\r\n                    return 'number';\r\n                }\r\n            }\r\n        }\r\n        return 'string';\r\n    }\r\n\r\n    sortTable(colIndex, direction) {\r\n        let type = this.detectColumnType(colIndex);\r\n        let rows = Array.from(this.table.querySelector(\"tbody\").querySelectorAll(\"tr\"));\r\n        rows.sort((a, b) => {\r\n            let A = a.cells[colIndex].hasAttribute('data-order') ? a.cells[colIndex].getAttribute('data-order') : a.cells[colIndex].textContent.trim();\r\n            let B = b.cells[colIndex].hasAttribute('data-order') ? b.cells[colIndex].getAttribute('data-order') : b.cells[colIndex].textContent.trim();\r\n\r\n            if (type === 'number') {\r\n                return direction === 'asc' ? A - B : B - A;\r\n            } else {\r\n                return direction === 'asc' ? A.localeCompare(B) : B.localeCompare(A);\r\n            }\r\n        });\r\n\r\n        this.table.querySelector(\"tbody\").append(...rows);\r\n    }\r\n\r\n    applyInitialOrder() {\r\n        this.initialOrder.forEach(orderCriteria => {\r\n            let [colIndex, direction] = orderCriteria;\r\n            this.sortTable(colIndex, direction.toLowerCase());\r\n\r\n            let header = this.table.querySelector(`th:nth-child(${colIndex + 1})`);\r\n            header.dataset.sort = direction.toLowerCase();\r\n            this.updateArrows(header);\r\n        });\r\n    }\r\n\r\n    searchTable(colIndex, query) {\r\n        query = query.trim();\r\n\r\n        // Mise à jour de l'objet des filtres, on utilise 'global' comme clé pour une recherche globale\r\n        let key = colIndex === null || colIndex === undefined ? \"global\" : colIndex;\r\n        if (query.trim() != '') {\r\n            this.filters[key] = query.toLowerCase();\r\n        } else {\r\n            delete this.filters[key];\r\n        }\r\n\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n\r\n        // Reset de la recherche\r\n        rows.forEach(row => {\r\n            row.dataset.matched = \"true\";\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        rows.forEach(row => {\r\n            for (const [filterKey, filterQuery] of Object.entries(this.filters)) {\r\n                if (row.dataset.matched !== \"true\") \r\n                    return;\r\n\r\n                let rowText = \"\"\r\n                if (filterKey !== 'global') {\r\n                    let cell = row.cells[parseInt(filterKey)];\r\n                    rowText = cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent;\r\n                } else {\r\n                    let cells = Array.from(row.getElementsByTagName(\"td\"));\r\n                    rowText = Array.from(cells).map(cell => cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent).join(' ');\r\n                }\r\n\r\n                rowText = rowText.trim().toLowerCase();\r\n                if ( !this.matchesUsingLevenshtein(rowText, filterQuery, this.options.temperature) ){\r\n                    row.style.display = \"none\";\r\n                    row.dataset.matched = \"false\";\r\n                }\r\n            }\r\n        });\r\n\r\n        // Remise à zéro de la pagination et repagination avec les résultats filtrés\r\n        this.currentPage = 1;\r\n        this.paginate();\r\n    }\r\n\r\n    matchesUsingLevenshtein(rowText, filterQuery, temperature) {\r\n        if ( rowText.indexOf(filterQuery) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        if( temperature == 0 || filterQuery.length < 4 || typeof rowText !== 'string' || typeof filterQuery !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i <= rowText.length - filterQuery.length; i++) {\r\n            let sub = rowText.substring(i, i + filterQuery.length);\r\n            if (this.levenshteinDistance(sub, filterQuery) <= temperature) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    levenshteinDistance(a, b) {\r\n        const matrix = [];\r\n        let i, j;\r\n\r\n        for (i = 0; i <= b.length; i++) {\r\n            matrix[i] = [i];\r\n        }\r\n\r\n        for (j = 0; j <= a.length; j++) {\r\n            matrix[0][j] = j;\r\n        }\r\n\r\n        for (i = 1; i <= b.length; i++) {\r\n            for (j = 1; j <= a.length; j++) {\r\n                if (b.charAt(i - 1) === a.charAt(j - 1)) {\r\n                    matrix[i][j] = matrix[i - 1][j - 1];\r\n                } else {\r\n                    matrix[i][j] = Math.min(\r\n                        matrix[i - 1][j - 1] + 1,\r\n                        matrix[i][j - 1] + 1,\r\n                        matrix[i - 1][j] + 1\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return matrix[b.length][a.length];\r\n    }\r\n\r\n    paginate() {\r\n        let totalRows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\").length;\r\n        let totalPages = Math.ceil(totalRows / this.pageLength);\r\n        let startIdx = (this.currentPage - 1) * this.pageLength;\r\n        let endIdx = startIdx + this.pageLength;\r\n\r\n        if( this.displayBloc.info) {\r\n            let endDisplay = endIdx > totalRows ? totalRows : endIdx;\r\n            this.infoLabel.textContent = `Affichage de l'élément ${startIdx + 1} à ${endDisplay} sur ${totalRows} éléments`;\r\n        }\r\n\r\n        // Control display of previous & next buttons\r\n        this.prevButton.disabled = this.currentPage <= 1;\r\n        this.nextButton.disabled = this.currentPage >= totalPages\r\n\r\n        let rows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\");\r\n        rows.forEach((row, idx) => {\r\n            row.style.display = idx < startIdx || idx >= endIdx ? \"none\" : \"\";\r\n        });\r\n\r\n        let buttonsDelete = this.paginationButtonsContainer.querySelectorAll('.page-btn');\r\n        buttonsDelete.forEach((button) => {\r\n            this.paginationButtonsContainer.removeChild(button);\r\n        });\r\n\r\n        let startPage = Math.max(1, this.currentPage - 3);\r\n        let endPage = Math.min(totalPages, this.currentPage + 3) -1;\r\n\r\n        let lastChild = this.paginationButtonsContainer.lastElementChild;\r\n        for (let i = startPage-1; i <= endPage; i++) {\r\n            let pageNumber = startPage + i;\r\n            let btn = document.createElement('button');\r\n            btn.textContent = pageNumber;\r\n            btn.setAttribute('data-page', pageNumber);\r\n            btn.className = 'page-btn';\r\n            btn.classList.toggle('active', pageNumber === this.currentPage);\r\n\r\n            this.paginationButtonsContainer.insertBefore(btn, lastChild);\r\n        }\r\n\r\n    }\r\n\r\n    addInfoControls() {\r\n        this.infoLabel = document.createElement('span');\r\n        this.infoLabel.className = 'pagination-info';\r\n        this.paginationWrapperDownContainer.appendChild(this.infoLabel);\r\n    }\r\n\r\n    addPaginationControls() {\r\n        // Items per page select\r\n        this.paginationWrapperTop = document.createElement('div');\r\n        this.paginationWrapperTop.className = 'pagination-wrapper-top';\r\n\r\n        this.paginationInfoTop = document.createElement(\"span\");\r\n        this.paginationInfoTop.textContent = \"Afficher\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTop);\r\n\r\n        this.paginationSelect = document.createElement(\"select\");\r\n        this.selectItemPage.forEach(num => {\r\n            let option = document.createElement(\"option\");\r\n            option.value = num;\r\n            option.textContent = num;\r\n            option.selected = num === this.pageLength ? true : false;\r\n            this.paginationSelect.appendChild(option);\r\n        });\r\n        this.paginationSelect.value = this.pageLength;\r\n        this.paginationWrapperTop.appendChild(this.paginationSelect);\r\n\r\n        this.paginationInfoTopAfter = document.createElement(\"span\");\r\n        this.paginationInfoTopAfter.textContent = \"éléments\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTopAfter);\r\n\r\n        this.paginationWrapperTopContainer.appendChild(this.paginationWrapperTop);\r\n\r\n        // Create du wrapper \"pagination-buttons-container\" for boutton\r\n        this.paginationButtonsContainer = document.createElement('div');\r\n        this.paginationButtonsContainer.className = 'pagination-buttons-container';\r\n\r\n        this.prevButton = document.createElement('button');\r\n        this.prevButton.textContent = 'Précédent';\r\n        this.prevButton.className = 'page-prev';\r\n        this.paginationButtonsContainer.appendChild(this.prevButton);\r\n\r\n        this.nextButton = document.createElement('button');\r\n        this.nextButton.textContent = 'Suivant';\r\n        this.nextButton.className = 'page-next';\r\n        this.paginationButtonsContainer.appendChild(this.nextButton);\r\n        this.paginationWrapperDownContainer.appendChild(this.paginationButtonsContainer);\r\n\r\n        this.paginationSelect.addEventListener(\"change\", () => {\r\n            this.pageLength = parseInt(this.paginationSelect.value);\r\n            this.currentPage = 1;\r\n            this.paginate();\r\n        });\r\n\r\n        this.paginationButtonsContainer.addEventListener('click', (event) => {\r\n            let classList = event.target.classList;\r\n            if ( classList.contains('page-btn') )\r\n                this.currentPage = parseInt(event.target.getAttribute('data-page'));\r\n            else if (classList.contains('page-prev') )\r\n                this.currentPage--;\r\n            else if (classList.contains('page-next') )\r\n                this.currentPage++;\r\n\r\n            this.paginate();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        // Supprimer l'input de recherche\r\n        if (this.searchInput) {\r\n            this.searchInput.remove();\r\n        }\r\n\r\n        // Supprimer les flèches de tri et les gestionnaires d'événements\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            if (header._sortingHandler) {\r\n                header.removeEventListener(\"click\", header._sortingHandler);\r\n                delete header._sortingHandler;\r\n            }\r\n\r\n            let arrow = header.querySelector(\".sort-arrow\");\r\n            if (arrow) {\r\n                arrow.remove();\r\n            }\r\n        });\r\n\r\n        // Afficher toutes les lignes du tableau\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n        rows.forEach(row => {\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        if (this.paginationWrapperTopContainer) {\r\n            this.paginationWrapperTopContainer.remove();\r\n        }\r\n\r\n        if (this.paginationWrapperDownContainer) {\r\n            this.paginationWrapperDownContainer.remove();\r\n        }\r\n\r\n        // Supprimer la ligne de recherche (filtres) dans l'en-tête\r\n        let searchRow = this.table.querySelector(\".thead-search\");\r\n        if (searchRow) {\r\n            searchRow.remove();\r\n        }\r\n    }\r\n}"]}