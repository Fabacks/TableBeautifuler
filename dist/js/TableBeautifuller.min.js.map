{"version":3,"sources":["TableBeautifuller.js"],"names":["TableBeautifuller","constructor","tableId","options","this","table","document","querySelector","eventList","displayBloc","info","ordering","paging","searching","columnSearch","temperature","parseInt","orderString","order","getAttribute","initialOrder","JSON","parse","Array","isArray","pageLength","currentPage","selectItemPage","includes","push","sort","a","b","debounce_delai","debounceDelai","filters","createWrappers","addSearchInput","addSortingArrows","applyInitialOrder","addSearchColumn","addInfoControls","addPaginationControls","paginate","classList","add","paginationWrapperTopContainer","createElement","parentNode","insertBefore","paginationWrapperDownContainer","appendChild","debounce","func","delay","debounceTimer","context","args","arguments","clearTimeout","setTimeout","apply","addEventList","element","eventName","listener","addEventListener","searchInput","setAttribute","className","searchTable","value","bind","searchRow","querySelectorAll","forEach","header","cell","input","type","e","cellIndex","target","select","uniqueValues","getUniqueValuesForColumn","innerHTML","val","option","textContent","colIndex","values","row","cells","trim","idx","dataset","arrow","headerClickHandler","sortDirection","sortTable","updateArrows","currentHeader","detectColumnType","rows","i","length","content","hasAttribute","isNaN","direction","from","A","B","localeCompare","append","orderCriteria","toLowerCase","query","key","matched","style","display","filterKey","filterQuery","Object","entries","rowText","getElementsByTagName","map","join","matchesUsingLevenshtein","indexOf","sub","substring","levenshteinDistance","matrix","j","charAt","Math","min","totalRows","filter","totalPages","ceil","startIdx","endIdx","endDisplay","infoLabel","prevButton","disabled","nextButton","paginationButtonsContainer","button","removeChild","startPage","max","endPage","lastChild","lastElementChild","pageNumber","btn","toggle","paginationWrapperTop","paginationInfoTop","paginationSelect","num","selected","paginationInfoTopAfter","event","contains","destroy","removeEventListener","remove","attribut","hasOwnProperty"],"mappings":"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","file":"TableBeautifuller.min.js","sourcesContent":["class TableBeautifuller {\r\n    constructor(tableId, options = {}) {\r\n        this.table = document.querySelector(tableId);\r\n        this.eventList = [];\r\n\r\n        // Display\r\n        this.displayBloc = {};\r\n        this.displayBloc.info = options.info ?? true;\r\n        this.displayBloc.ordering = options.ordering ?? true;\r\n        this.displayBloc.paging = options.paging ?? true;\r\n        this.displayBloc.searching = options.searching ?? true;\r\n        this.displayBloc.columnSearch = options.columnSearch ?? true;\r\n\r\n        // Options\r\n        this.options = {};\r\n        this.options.temperature = parseInt(options.temperature) || 1;\r\n\r\n        // Initialisation du trie par défaut\r\n        let orderString = options.order || this.table.getAttribute(\"data-order\");\r\n        if (typeof orderString === \"string\") {\r\n            this.initialOrder = JSON.parse(orderString);\r\n        } else if (Array.isArray(orderString)) {\r\n            this.initialOrder = orderString;\r\n        } else {\r\n            this.initialOrder = [];\r\n        }\r\n\r\n        // Initialisation des valeurs pour la pagination (nombre item par page)\r\n        this.pageLength = options.pageLength || parseInt(this.table.getAttribute(\"data-page-length\")) || 10;\r\n        this.currentPage = 1;\r\n\r\n        // Initialisation du nombre d'item par page dans le selector\r\n        this.selectItemPage = options.selectItemPage || [10, 20, 30];\r\n        if (!this.selectItemPage.includes(this.pageLength)) {\r\n            this.selectItemPage.push(this.pageLength);\r\n            this.selectItemPage.sort((a, b) => a - b);\r\n        }\r\n\r\n        // Initialisation du debounce\r\n        this.debounce_delai = options.debounceDelai || 300;\r\n\r\n        // Initialisez un objet pour suivre les filtres actifs\r\n        this.filters = {}; \r\n\r\n        this.createWrappers();\r\n\r\n        if (this.displayBloc.searching ) {\r\n            this.addSearchInput();\r\n        }\r\n\r\n        if (this.displayBloc.ordering) {\r\n            this.addSortingArrows();\r\n            this.applyInitialOrder();\r\n        }\r\n\r\n        if (this.displayBloc.columnSearch) {\r\n            this.addSearchColumn();\r\n        }\r\n\r\n        if (this.displayBloc.info) {\r\n            this.addInfoControls();\r\n        }\r\n\r\n        if (this.displayBloc.paging) {\r\n            this.addPaginationControls();\r\n            this.paginate();\r\n        }\r\n    }\r\n\r\n    createWrappers() {\r\n        // Ajout de la classe \"tableBeautifuller\" à la table\r\n        this.table.classList.add('tableBeautifuller');\r\n\r\n        // Création du wrapper \"pagination-wrapper-top-container\" au dessus du tableau\r\n        this.paginationWrapperTopContainer = document.createElement('div');\r\n        this.paginationWrapperTopContainer.classList.add('tableBeautifuller', 'pagination-wrapper-top-container');\r\n        this.table.parentNode.insertBefore(this.paginationWrapperTopContainer, this.table);\r\n\r\n        // Création du wrapper \"pagination-down-container\" en dessous du tableau\r\n        this.paginationWrapperDownContainer = document.createElement('div');\r\n        this.paginationWrapperDownContainer.classList.add('tableBeautifuller', 'pagination-down-container');\r\n        this.table.parentNode.appendChild(this.paginationWrapperDownContainer);\r\n    }\r\n\r\n    debounce(func, delay) {\r\n        let debounceTimer;\r\n        return function() {\r\n            const context = this;\r\n            const args = arguments;\r\n            clearTimeout(debounceTimer);\r\n            debounceTimer = setTimeout(() => func.apply(context, args), delay);\r\n        };\r\n    }\r\n\r\n    addEventList(element, eventName, listener) {\r\n        // Ajouter l'écouteur d'événement à l'élément\r\n        element.addEventListener(eventName, listener);\r\n\r\n        // Stocker l'élément, l'événement et la fonction d'écouteur liée dans eventList\r\n        this.eventList.push({element, eventName, listener});\r\n    }\r\n\r\n    addSearchInput() {\r\n        this.searchInput = document.createElement(\"input\");\r\n        this.searchInput.setAttribute(\"type\", \"text\");\r\n        this.searchInput.setAttribute(\"placeholder\", \"Recherche...\");\r\n        this.searchInput.className = \"search-input\";\r\n        this.paginationWrapperTopContainer.appendChild(this.searchInput);\r\n\r\n        this.addEventList(this.searchInput, 'keyup', this.debounce(() => {\r\n            this.searchTable(null, this.searchInput.value);\r\n        }, this.debounce_delai).bind(this));\r\n    }\r\n\r\n    addSearchColumn() {\r\n        let searchRow = document.createElement('tr');\r\n        searchRow.classList.add(\"thead-search\");\r\n\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            let cell = document.createElement('th');\r\n            let searchType = header.getAttribute('data-search') ?? '';\r\n\r\n            switch (searchType) {\r\n                case \"input\":\r\n                    let input = document.createElement('input');\r\n                    input.type = \"text\";\r\n\r\n                    this.addEventList(input, 'input', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai).bind(this));\r\n                    cell.appendChild(input);\r\n                break;\r\n                case \"combobox\":\r\n                    let select = document.createElement('select');\r\n                    let uniqueValues = this.getUniqueValuesForColumn(header.cellIndex);\r\n                    select.innerHTML = `<option value=\"\">Tout</option>`;\r\n                    uniqueValues.forEach(val => {\r\n                        let option = document.createElement('option');\r\n                        option.value = val;\r\n                        option.textContent = val;\r\n                        select.appendChild(option);\r\n                    });\r\n\r\n                    this.addEventList(select, 'change', this.debounce((e) => {\r\n                        this.searchTable(header.cellIndex, e.target.value);\r\n                    }, this.debounce_delai).bind(this));\r\n                    cell.appendChild(select);\r\n                break;\r\n                default:\r\n                    return;\r\n            }\r\n\r\n            searchRow.appendChild(cell);\r\n        });\r\n\r\n        this.table.querySelector('thead').appendChild(searchRow);\r\n    }\r\n\r\n    getUniqueValuesForColumn(colIndex) {\r\n        let values = [];\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        rows.forEach(row => {\r\n            let value = row.cells[colIndex].textContent.trim();\r\n            if (!values.includes(value)) {\r\n                values.push(value);\r\n            }\r\n        });\r\n        return values;\r\n    }\r\n\r\n    addSortingArrows() {\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach((header, idx) => {\r\n            header.dataset.sort = 'none';\r\n\r\n            let arrow = document.createElement('span');\r\n            arrow.classList.add('sort-arrow');\r\n            header.appendChild(arrow);\r\n\r\n            // let boundHandler = this.headerClickHandler.bind(this, header, idx);\r\n            // header._sortingHandler = boundHandler;\r\n\r\n            this.addEventList(header, 'click', this.headerClickHandler.bind(this, header, idx));\r\n        });\r\n    }\r\n\r\n    headerClickHandler(header, idx) {\r\n        let sortDirection = header.dataset.sort === 'asc' ? 'desc' : 'asc';\r\n        this.sortTable(idx, sortDirection);\r\n        header.dataset.sort = sortDirection;\r\n        this.updateArrows(header);\r\n    }\r\n\r\n    updateArrows(currentHeader) {\r\n        // Reset all arrows\r\n        this.table.querySelectorAll(\".sort-arrow\").forEach(arrow => {\r\n            arrow.textContent = '';\r\n        });\r\n\r\n        let arrowSpan = currentHeader.querySelector('.sort-arrow');\r\n        arrowSpan.textContent = currentHeader.dataset.sort === 'asc' ? '▲' : '▼';\r\n    }\r\n\r\n    detectColumnType(colIndex) {\r\n        let rows = this.table.querySelector(\"tbody\").querySelectorAll(\"tr\");\r\n        for (let i = 0; i < rows.length; i++) {\r\n            if (rows[i].cells[colIndex]) {\r\n                let content = rows[i].cells[colIndex].hasAttribute('data-order') ? rows[i].cells[colIndex].getAttribute('data-order') : rows[i].cells[colIndex].textContent.trim();\r\n                if (!isNaN(content)) {\r\n                    return 'number';\r\n                }\r\n            }\r\n        }\r\n        return 'string';\r\n    }\r\n\r\n    sortTable(colIndex, direction) {\r\n        let type = this.detectColumnType(colIndex);\r\n        let rows = Array.from(this.table.querySelector(\"tbody\").querySelectorAll(\"tr\"));\r\n        rows.sort((a, b) => {\r\n            let A = a.cells[colIndex].hasAttribute('data-order') ? a.cells[colIndex].getAttribute('data-order') : a.cells[colIndex].textContent.trim();\r\n            let B = b.cells[colIndex].hasAttribute('data-order') ? b.cells[colIndex].getAttribute('data-order') : b.cells[colIndex].textContent.trim();\r\n\r\n            if (type === 'number') {\r\n                return direction === 'asc' ? A - B : B - A;\r\n            } else {\r\n                return direction === 'asc' ? A.localeCompare(B) : B.localeCompare(A);\r\n            }\r\n        });\r\n\r\n        this.table.querySelector(\"tbody\").append(...rows);\r\n    }\r\n\r\n    applyInitialOrder() {\r\n        this.initialOrder.forEach(orderCriteria => {\r\n            let [colIndex, direction] = orderCriteria;\r\n            this.sortTable(colIndex, direction.toLowerCase());\r\n\r\n            let header = this.table.querySelector(`th:nth-child(${colIndex + 1})`);\r\n            header.dataset.sort = direction.toLowerCase();\r\n            this.updateArrows(header);\r\n        });\r\n    }\r\n\r\n    searchTable(colIndex, query) {\r\n        query = query.trim();\r\n\r\n        // Mise à jour de l'objet des filtres, on utilise 'global' comme clé pour une recherche globale\r\n        let key = colIndex === null || colIndex === undefined ? \"global\" : colIndex;\r\n        if (query.trim() != '') {\r\n            this.filters[key] = query.toLowerCase();\r\n        } else {\r\n            delete this.filters[key];\r\n        }\r\n\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n\r\n        // Reset de la recherche\r\n        rows.forEach(row => {\r\n            row.dataset.matched = \"true\";\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        rows.forEach(row => {\r\n            for (const [filterKey, filterQuery] of Object.entries(this.filters)) {\r\n                if (row.dataset.matched !== \"true\") \r\n                    return;\r\n\r\n                let rowText = \"\"\r\n                if (filterKey !== 'global') {\r\n                    let cell = row.cells[parseInt(filterKey)];\r\n                    rowText = cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent;\r\n                } else {\r\n                    let cells = Array.from(row.getElementsByTagName(\"td\"));\r\n                    rowText = Array.from(cells).map(cell => cell.hasAttribute(\"data-search\") ? cell.getAttribute(\"data-search\") : cell.textContent).join(' ');\r\n                }\r\n\r\n                rowText = rowText.trim().toLowerCase();\r\n                if ( !this.matchesUsingLevenshtein(rowText, filterQuery, this.options.temperature) ){\r\n                    row.style.display = \"none\";\r\n                    row.dataset.matched = \"false\";\r\n                }\r\n            }\r\n        });\r\n\r\n        // Remise à zéro de la pagination et repagination avec les résultats filtrés\r\n        this.currentPage = 1;\r\n        this.paginate();\r\n    }\r\n\r\n    matchesUsingLevenshtein(rowText, filterQuery, temperature) {\r\n        if ( rowText.indexOf(filterQuery) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        if( temperature == 0 || filterQuery.length < 4 || typeof rowText !== 'string' || typeof filterQuery !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        for (let i = 0; i <= rowText.length - filterQuery.length; i++) {\r\n            let sub = rowText.substring(i, i + filterQuery.length);\r\n            if (this.levenshteinDistance(sub, filterQuery) <= temperature) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    levenshteinDistance(a, b) {\r\n        const matrix = [];\r\n        let i, j;\r\n\r\n        for (i = 0; i <= b.length; i++) {\r\n            matrix[i] = [i];\r\n        }\r\n\r\n        for (j = 0; j <= a.length; j++) {\r\n            matrix[0][j] = j;\r\n        }\r\n\r\n        for (i = 1; i <= b.length; i++) {\r\n            for (j = 1; j <= a.length; j++) {\r\n                if (b.charAt(i - 1) === a.charAt(j - 1)) {\r\n                    matrix[i][j] = matrix[i - 1][j - 1];\r\n                } else {\r\n                    matrix[i][j] = Math.min(\r\n                        matrix[i - 1][j - 1] + 1,\r\n                        matrix[i][j - 1] + 1,\r\n                        matrix[i - 1][j] + 1\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return matrix[b.length][a.length];\r\n    }\r\n\r\n    paginate() {\r\n        let totalRows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\").length;\r\n        let totalPages = Math.ceil(totalRows / this.pageLength);\r\n        let startIdx = (this.currentPage - 1) * this.pageLength;\r\n        let endIdx = startIdx + this.pageLength;\r\n\r\n        if( this.displayBloc.info) {\r\n            let endDisplay = endIdx > totalRows ? totalRows : endIdx;\r\n            this.infoLabel.textContent = `Affichage de l'élément ${startIdx + 1} à ${endDisplay} sur ${totalRows} éléments`;\r\n        }\r\n\r\n        // Control display of previous & next buttons\r\n        this.prevButton.disabled = this.currentPage <= 1;\r\n        this.nextButton.disabled = this.currentPage >= totalPages\r\n\r\n        let rows = Array.from(this.table.querySelectorAll(\"tbody tr\")).filter(row => row.dataset.matched !== \"false\");\r\n        rows.forEach((row, idx) => {\r\n            row.style.display = idx < startIdx || idx >= endIdx ? \"none\" : \"\";\r\n        });\r\n\r\n        let buttonsDelete = this.paginationButtonsContainer.querySelectorAll('.page-btn');\r\n        buttonsDelete.forEach((button) => {\r\n            this.paginationButtonsContainer.removeChild(button);\r\n        });\r\n\r\n        let startPage = Math.max(1, this.currentPage - 3);\r\n        let endPage = Math.min(totalPages, this.currentPage + 3) -1;\r\n\r\n        let lastChild = this.paginationButtonsContainer.lastElementChild;\r\n        for (let i = startPage-1; i <= endPage; i++) {\r\n            let pageNumber = startPage + i;\r\n            let btn = document.createElement('button');\r\n            btn.textContent = pageNumber;\r\n            btn.setAttribute('data-page', pageNumber);\r\n            btn.className = 'page-btn';\r\n            btn.classList.toggle('active', pageNumber === this.currentPage);\r\n\r\n            this.paginationButtonsContainer.insertBefore(btn, lastChild);\r\n        }\r\n\r\n    }\r\n\r\n    addInfoControls() {\r\n        this.infoLabel = document.createElement('span');\r\n        this.infoLabel.className = 'pagination-info';\r\n        this.paginationWrapperDownContainer.appendChild(this.infoLabel);\r\n    }\r\n\r\n    addPaginationControls() {\r\n        // Items per page select\r\n        this.paginationWrapperTop = document.createElement('div');\r\n        this.paginationWrapperTop.className = 'pagination-wrapper-top';\r\n\r\n        this.paginationInfoTop = document.createElement(\"span\");\r\n        this.paginationInfoTop.textContent = \"Afficher\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTop);\r\n\r\n        this.paginationSelect = document.createElement(\"select\");\r\n        this.selectItemPage.forEach(num => {\r\n            let option = document.createElement(\"option\");\r\n            option.value = num;\r\n            option.textContent = num;\r\n            option.selected = num === this.pageLength ? true : false;\r\n            this.paginationSelect.appendChild(option);\r\n        });\r\n        this.paginationSelect.value = this.pageLength;\r\n        this.paginationWrapperTop.appendChild(this.paginationSelect);\r\n\r\n        this.paginationInfoTopAfter = document.createElement(\"span\");\r\n        this.paginationInfoTopAfter.textContent = \"éléments\";\r\n        this.paginationWrapperTop.appendChild(this.paginationInfoTopAfter);\r\n\r\n        this.paginationWrapperTopContainer.appendChild(this.paginationWrapperTop);\r\n\r\n        // Create du wrapper \"pagination-buttons-container\" for boutton\r\n        this.paginationButtonsContainer = document.createElement('div');\r\n        this.paginationButtonsContainer.className = 'pagination-buttons-container';\r\n\r\n        this.prevButton = document.createElement('button');\r\n        this.prevButton.textContent = 'Précédent';\r\n        this.prevButton.className = 'page-prev';\r\n        this.paginationButtonsContainer.appendChild(this.prevButton);\r\n\r\n        this.nextButton = document.createElement('button');\r\n        this.nextButton.textContent = 'Suivant';\r\n        this.nextButton.className = 'page-next';\r\n        this.paginationButtonsContainer.appendChild(this.nextButton);\r\n        this.paginationWrapperDownContainer.appendChild(this.paginationButtonsContainer);\r\n\r\n        this.addEventList(this.paginationSelect, 'change', (() => {\r\n            this.pageLength = parseInt(this.paginationSelect.value);\r\n            this.currentPage = 1;\r\n            this.paginate();\r\n        }).bind(this));\r\n\r\n        this.addEventList(this.paginationButtonsContainer, 'click', ((event) => {\r\n            let classList = event.target.classList;\r\n            if ( classList.contains('page-btn') )\r\n                this.currentPage = parseInt(event.target.getAttribute('data-page'));\r\n            else if (classList.contains('page-prev') )\r\n                this.currentPage--;\r\n            else if (classList.contains('page-next') )\r\n                this.currentPage++;\r\n\r\n            this.paginate();\r\n        }).bind(this));\r\n    }\r\n\r\n    destroy() {\r\n        // Supprimer tous les écouteurs d'événements\r\n        this.eventList.forEach(({ element, eventName, listener }) => {\r\n            element.removeEventListener(eventName, listener);\r\n        });\r\n\r\n        // Supprimer les flèches de tri\r\n        let headers = this.table.querySelectorAll(\"th\");\r\n        headers.forEach(header => {\r\n            let arrow = header.querySelector(\".sort-arrow\");\r\n            if (arrow) {\r\n                arrow.remove();\r\n            }\r\n        });\r\n\r\n        // Afficher toutes les lignes du tableau\r\n        let rows = this.table.querySelectorAll(\"tbody tr\");\r\n        rows.forEach(row => {\r\n            row.style.display = \"\";\r\n        });\r\n\r\n        // Supprime le wrapper au dessus du tableau\r\n        if (this.paginationWrapperTopContainer) {\r\n            this.paginationWrapperTopContainer.remove();\r\n        }\r\n\r\n        // Supprime le wrapper en dessosu du tableau \r\n        if (this.paginationWrapperDownContainer) {\r\n            this.paginationWrapperDownContainer.remove();\r\n        }\r\n\r\n        // Supprimer la ligne de recherche (filtres) dans l'en-tête\r\n        let searchRow = this.table.querySelector(\".thead-search\");\r\n        if (searchRow) {\r\n            searchRow.remove();\r\n        }\r\n\r\n        // Parcourir tous les attributs de l'objet et les définir à null\r\n        for (let attribut in this) {\r\n            if (this.hasOwnProperty(attribut)) {\r\n            this[attribut] = null;\r\n            }\r\n        }\r\n    }\r\n}"]}